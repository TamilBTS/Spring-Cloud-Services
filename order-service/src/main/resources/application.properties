spring.datasource.url=jdbc:mysql://localhost:3306/order
spring.datasource.username=root
spring.datasource.password=1234

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl.auto = update
spring.jpa.open-in-view = true
spring.jpa.show-sql = true

server.port= 8081

spring.application.name=order-service

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#To enable circuit breakers
management.health.circuitbreakers.enabled=true
managements.endpoints.web.exposure.include=*
management.endpoints.health.show-details=always

#Ressilence4J Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
#After 5 fail request state change from close -> open
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
#Wait for 5s before change open to half-open state
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
#Only allow 3 calls to check if service is back or not
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

#Zipkin Configuration -> Tracing Tool
spring.zipkin.base-url=http://localhost:9411
#Start trace for 100% of our request
management.tracing.sampling.probability=1.0

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]


#Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.group-id=notificationId

spring.kafka.consumer.value-serializer.trusted-packages=*
spring.kafka.producer.value-serializer.trusted-packages=*
